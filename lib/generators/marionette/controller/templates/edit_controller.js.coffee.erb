@<%= js_application_name %>.module "<%= module_name_class %>.<%= @controller %>", (<%= @controller %>, App, Backbone, Marionette, $, _) ->

  class <%= @controller %>.Controller extends App.Controllers.Base

    initialize: (options) ->
      { <%= singlularized_lower_module_name %>, id } = options
      <%= singlularized_lower_module_name %> = App.request "<%= singlularized_lower_module_name %>:entity", id
      @listenTo <%= singlularized_lower_module_name %>, "updated", ->
        App.vent.trigger "<%= singlularized_lower_module_name %>:updated", <%= singlularized_lower_module_name %>
      App.execute "when:fetched", <%= singlularized_lower_module_name %>, =>
        @layout = @getLayoutView <%= singlularized_lower_module_name %>
        @listenTo @layout, "show", =>
          @breadcrumbRegion()
          @sidebarRegion()
          @formRegion <%= singlularized_lower_module_name %>
        @show @layout

    breadcrumbRegion: ->
      breadcrumbView = @getBreadcrumbView()
      @layout.breadcrumbRegion.show breadcrumbView

    sidebarRegion: ->
      sidebarView = @getSidebarView()
      @layout.sidebarRegion.show sidebarView

    formRegion: (<%= singlularized_lower_module_name %>) ->
      editView = @getEditView <%= singlularized_lower_module_name %>
      @listenTo editView, "form:cancel", ->
        App.vent.trigger "<%= singlularized_lower_module_name %>:cancelled", <%= singlularized_lower_module_name %>
      formView = App.request "form:wrapper", editView
      @layout.formRegion.show formView

    getLayoutView: (<%= singlularized_lower_module_name %>) ->
      new Edit.Layout
        model: <%= singlularized_lower_module_name %>

    getEditView: (<%= singlularized_lower_module_name %>) ->
      new Edit.<%= singlularized_capital_module_name %>
        model: <%= singlularized_lower_module_name %>

    getBreadcrumbView: ->
      new Edit.Breadcrumb

    getSidebarView: ->
      new Edit.Sidebar    